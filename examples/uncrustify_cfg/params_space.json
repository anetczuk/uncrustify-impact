{
    "newlines": {
        "value": "auto",
        "type": "ParamType.SET",
        "allowed": [
            "lf",
            "crlf",
            "cr",
            "auto"
        ],
        "line": "newlines                        = auto     # lf/crlf/cr/auto"
    },
    "input_tab_size": {
        "value": "8",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "input_tab_size                  = 8        # unsigned number"
    },
    "output_tab_size": {
        "value": "8",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "output_tab_size                 = 8        # unsigned number"
    },
    "string_escape_char": {
        "value": "92",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "string_escape_char              = 92       # unsigned number"
    },
    "string_escape_char2": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "string_escape_char2             = 0        # unsigned number"
    },
    "string_replace_tab_chars": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "string_replace_tab_chars        = false    # true/false"
    },
    "tok_split_gte": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "tok_split_gte                   = false    # true/false"
    },
    "disable_processing_cmt": {
        "value": "\" *INDENT-OFF*\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "disable_processing_cmt          = \" *INDENT-OFF*\"      # string"
    },
    "enable_processing_cmt": {
        "value": "\" *INDENT-ON*\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "enable_processing_cmt           = \" *INDENT-ON*\"     # string"
    },
    "enable_digraphs": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "enable_digraphs                 = false    # true/false"
    },
    "utf8_bom": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "utf8_bom                        = ignore   # ignore/add/remove/force"
    },
    "utf8_byte": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "utf8_byte                       = false    # true/false"
    },
    "utf8_force": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "utf8_force                      = false    # true/false"
    },
    "sp_arith": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_arith                        = ignore   # ignore/add/remove/force"
    },
    "sp_arith_additive": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_arith_additive               = ignore   # ignore/add/remove/force"
    },
    "sp_assign": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_assign                       = ignore   # ignore/add/remove/force"
    },
    "sp_cpp_lambda_assign": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cpp_lambda_assign            = ignore   # ignore/add/remove/force"
    },
    "sp_cpp_lambda_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cpp_lambda_paren             = ignore   # ignore/add/remove/force"
    },
    "sp_assign_default": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_assign_default               = ignore   # ignore/add/remove/force"
    },
    "sp_before_assign": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_assign                = ignore   # ignore/add/remove/force"
    },
    "sp_after_assign": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_assign                 = ignore   # ignore/add/remove/force"
    },
    "sp_enum_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_enum_paren                   = ignore   # ignore/add/remove/force"
    },
    "sp_enum_assign": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_enum_assign                  = ignore   # ignore/add/remove/force"
    },
    "sp_enum_before_assign": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_enum_before_assign           = ignore   # ignore/add/remove/force"
    },
    "sp_enum_after_assign": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_enum_after_assign            = ignore   # ignore/add/remove/force"
    },
    "sp_enum_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_enum_colon                   = ignore   # ignore/add/remove/force"
    },
    "sp_pp_concat": {
        "value": "add",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_pp_concat                    = add      # ignore/add/remove/force"
    },
    "sp_pp_stringify": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_pp_stringify                 = ignore   # ignore/add/remove/force"
    },
    "sp_before_pp_stringify": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_pp_stringify          = ignore   # ignore/add/remove/force"
    },
    "sp_bool": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_bool                         = ignore   # ignore/add/remove/force"
    },
    "sp_compare": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_compare                      = ignore   # ignore/add/remove/force"
    },
    "sp_inside_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_paren                 = ignore   # ignore/add/remove/force"
    },
    "sp_paren_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_paren_paren                  = ignore   # ignore/add/remove/force"
    },
    "sp_cparen_oparen": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cparen_oparen                = ignore   # ignore/add/remove/force"
    },
    "sp_balance_nested_parens": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "sp_balance_nested_parens        = false    # true/false"
    },
    "sp_paren_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_paren_brace                  = ignore   # ignore/add/remove/force"
    },
    "sp_brace_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_brace_brace                  = ignore   # ignore/add/remove/force"
    },
    "sp_before_ptr_star": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_ptr_star              = ignore   # ignore/add/remove/force"
    },
    "sp_before_unnamed_ptr_star": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_unnamed_ptr_star      = ignore   # ignore/add/remove/force"
    },
    "sp_between_ptr_star": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_between_ptr_star             = ignore   # ignore/add/remove/force"
    },
    "sp_after_ptr_star": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_ptr_star               = ignore   # ignore/add/remove/force"
    },
    "sp_after_ptr_block_caret": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_ptr_block_caret        = ignore   # ignore/add/remove/force"
    },
    "sp_after_ptr_star_qualifier": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_ptr_star_qualifier     = ignore   # ignore/add/remove/force"
    },
    "sp_after_ptr_star_func": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_ptr_star_func          = ignore   # ignore/add/remove/force"
    },
    "sp_ptr_star_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_ptr_star_paren               = ignore   # ignore/add/remove/force"
    },
    "sp_before_ptr_star_func": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_ptr_star_func         = ignore   # ignore/add/remove/force"
    },
    "sp_before_byref": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_byref                 = ignore   # ignore/add/remove/force"
    },
    "sp_before_unnamed_byref": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_unnamed_byref         = ignore   # ignore/add/remove/force"
    },
    "sp_after_byref": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_byref                  = ignore   # ignore/add/remove/force"
    },
    "sp_after_byref_func": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_byref_func             = ignore   # ignore/add/remove/force"
    },
    "sp_before_byref_func": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_byref_func            = ignore   # ignore/add/remove/force"
    },
    "sp_after_type": {
        "value": "force",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_type                   = force    # ignore/add/remove/force"
    },
    "sp_after_decltype": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_decltype               = ignore   # ignore/add/remove/force"
    },
    "sp_before_template_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_template_paren        = ignore   # ignore/add/remove/force"
    },
    "sp_template_angle": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_template_angle               = ignore   # ignore/add/remove/force"
    },
    "sp_before_angle": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_angle                 = ignore   # ignore/add/remove/force"
    },
    "sp_inside_angle": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_angle                 = ignore   # ignore/add/remove/force"
    },
    "sp_inside_angle_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_angle_empty           = ignore   # ignore/add/remove/force"
    },
    "sp_angle_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_angle_colon                  = ignore   # ignore/add/remove/force"
    },
    "sp_after_angle": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_angle                  = ignore   # ignore/add/remove/force"
    },
    "sp_angle_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_angle_paren                  = ignore   # ignore/add/remove/force"
    },
    "sp_angle_paren_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_angle_paren_empty            = ignore   # ignore/add/remove/force"
    },
    "sp_angle_word": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_angle_word                   = ignore   # ignore/add/remove/force"
    },
    "sp_angle_shift": {
        "value": "add",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_angle_shift                  = add      # ignore/add/remove/force"
    },
    "sp_permit_cpp11_shift": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "sp_permit_cpp11_shift           = false    # true/false"
    },
    "sp_before_sparen": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_sparen                = ignore   # ignore/add/remove/force"
    },
    "sp_inside_sparen": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_sparen                = ignore   # ignore/add/remove/force"
    },
    "sp_inside_sparen_open": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_sparen_open           = ignore   # ignore/add/remove/force"
    },
    "sp_inside_sparen_close": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_sparen_close          = ignore   # ignore/add/remove/force"
    },
    "sp_after_sparen": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_sparen                 = ignore   # ignore/add/remove/force"
    },
    "sp_sparen_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_sparen_brace                 = ignore   # ignore/add/remove/force"
    },
    "sp_invariant_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_invariant_paren              = ignore   # ignore/add/remove/force"
    },
    "sp_after_invariant_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_invariant_paren        = ignore   # ignore/add/remove/force"
    },
    "sp_special_semi": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_special_semi                 = ignore   # ignore/add/remove/force"
    },
    "sp_before_semi": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_semi                  = remove   # ignore/add/remove/force"
    },
    "sp_before_semi_for": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_semi_for              = ignore   # ignore/add/remove/force"
    },
    "sp_before_semi_for_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_semi_for_empty        = ignore   # ignore/add/remove/force"
    },
    "sp_after_semi": {
        "value": "add",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_semi                   = add      # ignore/add/remove/force"
    },
    "sp_after_semi_for": {
        "value": "force",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_semi_for               = force    # ignore/add/remove/force"
    },
    "sp_after_semi_for_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_semi_for_empty         = ignore   # ignore/add/remove/force"
    },
    "sp_before_square": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_square                = ignore   # ignore/add/remove/force"
    },
    "sp_before_squares": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_squares               = ignore   # ignore/add/remove/force"
    },
    "sp_cpp_before_struct_binding": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cpp_before_struct_binding    = ignore   # ignore/add/remove/force"
    },
    "sp_inside_square": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_square                = ignore   # ignore/add/remove/force"
    },
    "sp_inside_square_oc_array": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_square_oc_array       = ignore   # ignore/add/remove/force"
    },
    "sp_after_comma": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_comma                  = ignore   # ignore/add/remove/force"
    },
    "sp_before_comma": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_comma                 = remove   # ignore/add/remove/force"
    },
    "sp_after_mdatype_commas": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_mdatype_commas         = ignore   # ignore/add/remove/force"
    },
    "sp_before_mdatype_commas": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_mdatype_commas        = ignore   # ignore/add/remove/force"
    },
    "sp_between_mdatype_commas": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_between_mdatype_commas       = ignore   # ignore/add/remove/force"
    },
    "sp_paren_comma": {
        "value": "force",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_paren_comma                  = force    # ignore/add/remove/force"
    },
    "sp_before_ellipsis": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_ellipsis              = ignore   # ignore/add/remove/force"
    },
    "sp_type_ellipsis": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_type_ellipsis                = ignore   # ignore/add/remove/force"
    },
    "sp_type_question": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_type_question                = ignore   # ignore/add/remove/force"
    },
    "sp_paren_ellipsis": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_paren_ellipsis               = ignore   # ignore/add/remove/force"
    },
    "sp_paren_qualifier": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_paren_qualifier              = ignore   # ignore/add/remove/force"
    },
    "sp_paren_noexcept": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_paren_noexcept               = ignore   # ignore/add/remove/force"
    },
    "sp_after_class_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_class_colon            = ignore   # ignore/add/remove/force"
    },
    "sp_before_class_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_class_colon           = ignore   # ignore/add/remove/force"
    },
    "sp_after_constr_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_constr_colon           = ignore   # ignore/add/remove/force"
    },
    "sp_before_constr_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_constr_colon          = ignore   # ignore/add/remove/force"
    },
    "sp_before_case_colon": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_case_colon            = remove   # ignore/add/remove/force"
    },
    "sp_after_operator": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_operator               = ignore   # ignore/add/remove/force"
    },
    "sp_after_operator_sym": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_operator_sym           = ignore   # ignore/add/remove/force"
    },
    "sp_after_operator_sym_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_operator_sym_empty     = ignore   # ignore/add/remove/force"
    },
    "sp_after_cast": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_cast                   = ignore   # ignore/add/remove/force"
    },
    "sp_inside_paren_cast": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_paren_cast            = ignore   # ignore/add/remove/force"
    },
    "sp_cpp_cast_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cpp_cast_paren               = ignore   # ignore/add/remove/force"
    },
    "sp_sizeof_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_sizeof_paren                 = ignore   # ignore/add/remove/force"
    },
    "sp_sizeof_ellipsis": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_sizeof_ellipsis              = ignore   # ignore/add/remove/force"
    },
    "sp_sizeof_ellipsis_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_sizeof_ellipsis_paren        = ignore   # ignore/add/remove/force"
    },
    "sp_decltype_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_decltype_paren               = ignore   # ignore/add/remove/force"
    },
    "sp_after_tag": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_tag                    = ignore   # ignore/add/remove/force"
    },
    "sp_inside_braces_enum": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_braces_enum           = ignore   # ignore/add/remove/force"
    },
    "sp_inside_braces_struct": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_braces_struct         = ignore   # ignore/add/remove/force"
    },
    "sp_inside_braces_oc_dict": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_braces_oc_dict        = ignore   # ignore/add/remove/force"
    },
    "sp_after_type_brace_init_lst_open": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_type_brace_init_lst_open = ignore   # ignore/add/remove/force"
    },
    "sp_before_type_brace_init_lst_close": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_type_brace_init_lst_close = ignore   # ignore/add/remove/force"
    },
    "sp_inside_type_brace_init_lst": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_type_brace_init_lst   = ignore   # ignore/add/remove/force"
    },
    "sp_inside_braces": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_braces                = ignore   # ignore/add/remove/force"
    },
    "sp_inside_braces_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_braces_empty          = ignore   # ignore/add/remove/force"
    },
    "sp_type_func": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_type_func                    = ignore   # ignore/add/remove/force"
    },
    "sp_type_brace_init_lst": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_type_brace_init_lst          = ignore   # ignore/add/remove/force"
    },
    "sp_func_proto_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_proto_paren             = ignore   # ignore/add/remove/force"
    },
    "sp_func_proto_paren_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_proto_paren_empty       = ignore   # ignore/add/remove/force"
    },
    "sp_func_def_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_def_paren               = ignore   # ignore/add/remove/force"
    },
    "sp_func_def_paren_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_def_paren_empty         = ignore   # ignore/add/remove/force"
    },
    "sp_inside_fparens": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_fparens               = ignore   # ignore/add/remove/force"
    },
    "sp_inside_fparen": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_fparen                = ignore   # ignore/add/remove/force"
    },
    "sp_inside_tparen": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_tparen                = ignore   # ignore/add/remove/force"
    },
    "sp_after_tparen_close": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_tparen_close           = ignore   # ignore/add/remove/force"
    },
    "sp_square_fparen": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_square_fparen                = ignore   # ignore/add/remove/force"
    },
    "sp_fparen_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_fparen_brace                 = ignore   # ignore/add/remove/force"
    },
    "sp_fparen_brace_initializer": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_fparen_brace_initializer     = ignore   # ignore/add/remove/force"
    },
    "sp_fparen_dbrace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_fparen_dbrace                = ignore   # ignore/add/remove/force"
    },
    "sp_func_call_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_call_paren              = ignore   # ignore/add/remove/force"
    },
    "sp_func_call_paren_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_call_paren_empty        = ignore   # ignore/add/remove/force"
    },
    "sp_func_call_user_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_call_user_paren         = ignore   # ignore/add/remove/force"
    },
    "sp_func_call_user_inside_fparen": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_call_user_inside_fparen = ignore   # ignore/add/remove/force"
    },
    "sp_func_call_user_paren_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_call_user_paren_paren   = ignore   # ignore/add/remove/force"
    },
    "sp_func_class_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_class_paren             = ignore   # ignore/add/remove/force"
    },
    "sp_func_class_paren_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_func_class_paren_empty       = ignore   # ignore/add/remove/force"
    },
    "sp_return_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_return_paren                 = ignore   # ignore/add/remove/force"
    },
    "sp_return_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_return_brace                 = ignore   # ignore/add/remove/force"
    },
    "sp_attribute_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_attribute_paren              = ignore   # ignore/add/remove/force"
    },
    "sp_defined_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_defined_paren                = ignore   # ignore/add/remove/force"
    },
    "sp_throw_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_throw_paren                  = ignore   # ignore/add/remove/force"
    },
    "sp_after_throw": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_throw                  = ignore   # ignore/add/remove/force"
    },
    "sp_catch_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_catch_paren                  = ignore   # ignore/add/remove/force"
    },
    "sp_oc_catch_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_oc_catch_paren               = ignore   # ignore/add/remove/force"
    },
    "sp_oc_classname_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_oc_classname_paren           = ignore   # ignore/add/remove/force"
    },
    "sp_version_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_version_paren                = ignore   # ignore/add/remove/force"
    },
    "sp_scope_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_scope_paren                  = ignore   # ignore/add/remove/force"
    },
    "sp_super_paren": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_super_paren                  = remove   # ignore/add/remove/force"
    },
    "sp_this_paren": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_this_paren                   = remove   # ignore/add/remove/force"
    },
    "sp_macro": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_macro                        = ignore   # ignore/add/remove/force"
    },
    "sp_macro_func": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_macro_func                   = ignore   # ignore/add/remove/force"
    },
    "sp_else_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_else_brace                   = ignore   # ignore/add/remove/force"
    },
    "sp_brace_else": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_brace_else                   = ignore   # ignore/add/remove/force"
    },
    "sp_brace_typedef": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_brace_typedef                = ignore   # ignore/add/remove/force"
    },
    "sp_catch_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_catch_brace                  = ignore   # ignore/add/remove/force"
    },
    "sp_oc_catch_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_oc_catch_brace               = ignore   # ignore/add/remove/force"
    },
    "sp_brace_catch": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_brace_catch                  = ignore   # ignore/add/remove/force"
    },
    "sp_oc_brace_catch": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_oc_brace_catch               = ignore   # ignore/add/remove/force"
    },
    "sp_finally_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_finally_brace                = ignore   # ignore/add/remove/force"
    },
    "sp_brace_finally": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_brace_finally                = ignore   # ignore/add/remove/force"
    },
    "sp_try_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_try_brace                    = ignore   # ignore/add/remove/force"
    },
    "sp_getset_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_getset_brace                 = ignore   # ignore/add/remove/force"
    },
    "sp_word_brace": {
        "value": "add",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_word_brace                   = add      # ignore/add/remove/force"
    },
    "sp_word_brace_ns": {
        "value": "add",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_word_brace_ns                = add      # ignore/add/remove/force"
    },
    "sp_before_dc": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_dc                    = ignore   # ignore/add/remove/force"
    },
    "sp_after_dc": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_dc                     = ignore   # ignore/add/remove/force"
    },
    "sp_d_array_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_d_array_colon                = ignore   # ignore/add/remove/force"
    },
    "sp_not": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_not                          = remove   # ignore/add/remove/force"
    },
    "sp_inv": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inv                          = remove   # ignore/add/remove/force"
    },
    "sp_addr": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_addr                         = remove   # ignore/add/remove/force"
    },
    "sp_member": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_member                       = remove   # ignore/add/remove/force"
    },
    "sp_deref": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_deref                        = remove   # ignore/add/remove/force"
    },
    "sp_sign": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_sign                         = remove   # ignore/add/remove/force"
    },
    "sp_incdec": {
        "value": "remove",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_incdec                       = remove   # ignore/add/remove/force"
    },
    "sp_before_nl_cont": {
        "value": "add",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_nl_cont               = add      # ignore/add/remove/force"
    },
    "sp_after_oc_scope": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_scope               = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_colon               = ignore   # ignore/add/remove/force"
    },
    "sp_before_oc_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_oc_colon              = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_dict_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_dict_colon          = ignore   # ignore/add/remove/force"
    },
    "sp_before_oc_dict_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_oc_dict_colon         = ignore   # ignore/add/remove/force"
    },
    "sp_after_send_oc_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_send_oc_colon          = ignore   # ignore/add/remove/force"
    },
    "sp_before_send_oc_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_send_oc_colon         = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_type": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_type                = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_return_type": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_return_type         = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_at_sel": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_at_sel              = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_at_sel_parens": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_at_sel_parens       = ignore   # ignore/add/remove/force"
    },
    "sp_inside_oc_at_sel_parens": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_oc_at_sel_parens      = ignore   # ignore/add/remove/force"
    },
    "sp_before_oc_block_caret": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_oc_block_caret        = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_block_caret": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_block_caret         = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_msg_receiver": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_msg_receiver        = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_property": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_property            = ignore   # ignore/add/remove/force"
    },
    "sp_after_oc_synchronized": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_oc_synchronized        = ignore   # ignore/add/remove/force"
    },
    "sp_cond_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cond_colon                   = ignore   # ignore/add/remove/force"
    },
    "sp_cond_colon_before": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cond_colon_before            = ignore   # ignore/add/remove/force"
    },
    "sp_cond_colon_after": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cond_colon_after             = ignore   # ignore/add/remove/force"
    },
    "sp_cond_question": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cond_question                = ignore   # ignore/add/remove/force"
    },
    "sp_cond_question_before": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cond_question_before         = ignore   # ignore/add/remove/force"
    },
    "sp_cond_question_after": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cond_question_after          = ignore   # ignore/add/remove/force"
    },
    "sp_cond_ternary_short": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cond_ternary_short           = ignore   # ignore/add/remove/force"
    },
    "sp_case_label": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_case_label                   = ignore   # ignore/add/remove/force"
    },
    "sp_range": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_range                        = ignore   # ignore/add/remove/force"
    },
    "sp_after_for_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_for_colon              = ignore   # ignore/add/remove/force"
    },
    "sp_before_for_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_for_colon             = ignore   # ignore/add/remove/force"
    },
    "sp_extern_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_extern_paren                 = ignore   # ignore/add/remove/force"
    },
    "sp_cmt_cpp_start": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_cmt_cpp_start                = ignore   # ignore/add/remove/force"
    },
    "sp_cmt_cpp_doxygen": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "sp_cmt_cpp_doxygen              = false    # true/false"
    },
    "sp_cmt_cpp_qttr": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "sp_cmt_cpp_qttr                 = false    # true/false"
    },
    "sp_endif_cmt": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_endif_cmt                    = ignore   # ignore/add/remove/force"
    },
    "sp_after_new": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_new                    = ignore   # ignore/add/remove/force"
    },
    "sp_between_new_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_between_new_paren            = ignore   # ignore/add/remove/force"
    },
    "sp_after_newop_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_newop_paren            = ignore   # ignore/add/remove/force"
    },
    "sp_inside_newop_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_newop_paren           = ignore   # ignore/add/remove/force"
    },
    "sp_inside_newop_paren_open": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_newop_paren_open      = ignore   # ignore/add/remove/force"
    },
    "sp_inside_newop_paren_close": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_inside_newop_paren_close     = ignore   # ignore/add/remove/force"
    },
    "sp_before_tr_emb_cmt": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_before_tr_emb_cmt            = ignore   # ignore/add/remove/force"
    },
    "sp_num_before_tr_emb_cmt": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "sp_num_before_tr_emb_cmt        = 0        # unsigned number"
    },
    "sp_annotation_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_annotation_paren             = ignore   # ignore/add/remove/force"
    },
    "sp_skip_vbrace_tokens": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "sp_skip_vbrace_tokens           = false    # true/false"
    },
    "sp_after_noexcept": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_after_noexcept               = ignore   # ignore/add/remove/force"
    },
    "sp_vala_after_translation": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "sp_vala_after_translation       = ignore   # ignore/add/remove/force"
    },
    "force_tab_after_define": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "force_tab_after_define          = false    # true/false"
    },
    "indent_columns": {
        "value": "8",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_columns                  = 8        # unsigned number"
    },
    "indent_continue": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "indent_continue                 = 0        # number"
    },
    "indent_continue_class_head": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_continue_class_head      = 0        # unsigned number"
    },
    "indent_single_newlines": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_single_newlines          = false    # true/false"
    },
    "indent_param": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_param                    = 0        # unsigned number"
    },
    "indent_with_tabs": {
        "value": "1",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_with_tabs                = 1        # unsigned number"
    },
    "indent_cmt_with_tabs": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_cmt_with_tabs            = false    # true/false"
    },
    "indent_align_string": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_align_string             = false    # true/false"
    },
    "indent_xml_string": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_xml_string               = 0        # unsigned number"
    },
    "indent_brace": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_brace                    = 0        # unsigned number"
    },
    "indent_braces": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_braces                   = false    # true/false"
    },
    "indent_braces_no_func": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_braces_no_func           = false    # true/false"
    },
    "indent_braces_no_class": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_braces_no_class          = false    # true/false"
    },
    "indent_braces_no_struct": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_braces_no_struct         = false    # true/false"
    },
    "indent_brace_parent": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_brace_parent             = false    # true/false"
    },
    "indent_paren_open_brace": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_paren_open_brace         = false    # true/false"
    },
    "indent_cs_delegate_brace": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_cs_delegate_brace        = false    # true/false"
    },
    "indent_cs_delegate_body": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_cs_delegate_body         = false    # true/false"
    },
    "indent_namespace": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_namespace                = false    # true/false"
    },
    "indent_namespace_single_indent": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_namespace_single_indent  = false    # true/false"
    },
    "indent_namespace_level": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_namespace_level          = 0        # unsigned number"
    },
    "indent_namespace_limit": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_namespace_limit          = 0        # unsigned number"
    },
    "indent_extern": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_extern                   = false    # true/false"
    },
    "indent_class": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_class                    = false    # true/false"
    },
    "indent_class_colon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_class_colon              = false    # true/false"
    },
    "indent_class_on_colon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_class_on_colon           = false    # true/false"
    },
    "indent_constr_colon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_constr_colon             = false    # true/false"
    },
    "indent_ctor_init_leading": {
        "value": "2",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_ctor_init_leading        = 2        # unsigned number"
    },
    "indent_ctor_init": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "indent_ctor_init                = 0        # number"
    },
    "indent_else_if": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_else_if                  = false    # true/false"
    },
    "indent_var_def_blk": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "indent_var_def_blk              = 0        # number"
    },
    "indent_var_def_cont": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_var_def_cont             = false    # true/false"
    },
    "indent_shift": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_shift                    = false    # true/false"
    },
    "indent_func_def_force_col1": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_func_def_force_col1      = false    # true/false"
    },
    "indent_func_call_param": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_func_call_param          = false    # true/false"
    },
    "indent_func_def_param": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_func_def_param           = false    # true/false"
    },
    "indent_func_proto_param": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_func_proto_param         = false    # true/false"
    },
    "indent_func_class_param": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_func_class_param         = false    # true/false"
    },
    "indent_func_ctor_var_param": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_func_ctor_var_param      = false    # true/false"
    },
    "indent_template_param": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_template_param           = false    # true/false"
    },
    "indent_func_param_double": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_func_param_double        = false    # true/false"
    },
    "indent_func_const": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_func_const               = 0        # unsigned number"
    },
    "indent_func_throw": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_func_throw               = 0        # unsigned number"
    },
    "indent_member": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_member                   = 0        # unsigned number"
    },
    "indent_member_single": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_member_single            = false    # true/false"
    },
    "indent_sing_line_comments": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_sing_line_comments       = 0        # unsigned number"
    },
    "indent_relative_single_line_comments": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_relative_single_line_comments = false    # true/false"
    },
    "indent_switch_case": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_switch_case              = 0        # unsigned number"
    },
    "indent_switch_pp": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_switch_pp                = true     # true/false"
    },
    "indent_case_shift": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_case_shift               = 0        # unsigned number"
    },
    "indent_case_brace": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "indent_case_brace               = 0        # number"
    },
    "indent_col1_comment": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_col1_comment             = false    # true/false"
    },
    "indent_col1_multi_string_literal": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_col1_multi_string_literal = false    # true/false"
    },
    "indent_label": {
        "value": "1",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "indent_label                    = 1        # number"
    },
    "indent_access_spec": {
        "value": "1",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "indent_access_spec              = 1        # number"
    },
    "indent_access_spec_body": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_access_spec_body         = false    # true/false"
    },
    "indent_paren_nl": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_paren_nl                 = false    # true/false"
    },
    "indent_paren_close": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_paren_close              = 0        # unsigned number"
    },
    "indent_paren_after_func_def": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_paren_after_func_def     = false    # true/false"
    },
    "indent_paren_after_func_decl": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_paren_after_func_decl    = false    # true/false"
    },
    "indent_paren_after_func_call": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_paren_after_func_call    = false    # true/false"
    },
    "indent_comma_paren": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_comma_paren              = false    # true/false"
    },
    "indent_bool_paren": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_bool_paren               = false    # true/false"
    },
    "indent_semicolon_for_paren": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_semicolon_for_paren      = false    # true/false"
    },
    "indent_first_bool_expr": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_first_bool_expr          = false    # true/false"
    },
    "indent_first_for_expr": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_first_for_expr           = false    # true/false"
    },
    "indent_square_nl": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_square_nl                = false    # true/false"
    },
    "indent_preserve_sql": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_preserve_sql             = false    # true/false"
    },
    "indent_align_assign": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_align_assign             = true     # true/false"
    },
    "indent_align_paren": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_align_paren              = true     # true/false"
    },
    "indent_oc_block": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_oc_block                 = false    # true/false"
    },
    "indent_oc_block_msg": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_oc_block_msg             = 0        # unsigned number"
    },
    "indent_oc_msg_colon": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_oc_msg_colon             = 0        # unsigned number"
    },
    "indent_oc_msg_prioritize_first_colon": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_oc_msg_prioritize_first_colon = true     # true/false"
    },
    "indent_oc_block_msg_xcode_style": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_oc_block_msg_xcode_style = false    # true/false"
    },
    "indent_oc_block_msg_from_keyword": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_oc_block_msg_from_keyword = false    # true/false"
    },
    "indent_oc_block_msg_from_colon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_oc_block_msg_from_colon  = false    # true/false"
    },
    "indent_oc_block_msg_from_caret": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_oc_block_msg_from_caret  = false    # true/false"
    },
    "indent_oc_block_msg_from_brace": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_oc_block_msg_from_brace  = false    # true/false"
    },
    "indent_min_vbrace_open": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_min_vbrace_open          = 0        # unsigned number"
    },
    "indent_vbrace_open_on_tabstop": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_vbrace_open_on_tabstop   = false    # true/false"
    },
    "indent_token_after_brace": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_token_after_brace        = true     # true/false"
    },
    "indent_cpp_lambda_body": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_cpp_lambda_body          = false    # true/false"
    },
    "indent_using_block": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_using_block              = true     # true/false"
    },
    "indent_ternary_operator": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "indent_ternary_operator         = 0        # unsigned number"
    },
    "indent_off_after_return_new": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_off_after_return_new     = false    # true/false"
    },
    "indent_single_after_return": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_single_after_return      = false    # true/false"
    },
    "indent_ignore_asm_block": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_ignore_asm_block         = false    # true/false"
    },
    "nl_collapse_empty_body": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_collapse_empty_body          = false    # true/false"
    },
    "nl_assign_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_assign_leave_one_liners      = false    # true/false"
    },
    "nl_class_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_class_leave_one_liners       = false    # true/false"
    },
    "nl_enum_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_enum_leave_one_liners        = false    # true/false"
    },
    "nl_getset_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_getset_leave_one_liners      = false    # true/false"
    },
    "nl_cs_property_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_cs_property_leave_one_liners = false    # true/false"
    },
    "nl_func_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_leave_one_liners        = false    # true/false"
    },
    "nl_cpp_lambda_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_cpp_lambda_leave_one_liners  = false    # true/false"
    },
    "nl_if_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_if_leave_one_liners          = false    # true/false"
    },
    "nl_while_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_while_leave_one_liners       = false    # true/false"
    },
    "nl_for_leave_one_liners": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_for_leave_one_liners         = false    # true/false"
    },
    "nl_oc_msg_leave_one_liner": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_oc_msg_leave_one_liner       = false    # true/false"
    },
    "nl_oc_mdef_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_oc_mdef_brace                = ignore   # ignore/add/remove/force"
    },
    "nl_oc_block_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_oc_block_brace               = ignore   # ignore/add/remove/force"
    },
    "nl_oc_interface_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_oc_interface_brace           = ignore   # ignore/add/remove/force"
    },
    "nl_oc_implementation_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_oc_implementation_brace      = ignore   # ignore/add/remove/force"
    },
    "nl_start_of_file": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_start_of_file                = ignore   # ignore/add/remove/force"
    },
    "nl_start_of_file_min": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_start_of_file_min            = 0        # unsigned number"
    },
    "nl_end_of_file": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_end_of_file                  = ignore   # ignore/add/remove/force"
    },
    "nl_end_of_file_min": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_end_of_file_min              = 0        # unsigned number"
    },
    "nl_assign_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_assign_brace                 = ignore   # ignore/add/remove/force"
    },
    "nl_assign_square": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_assign_square                = ignore   # ignore/add/remove/force"
    },
    "nl_tsquare_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_tsquare_brace                = ignore   # ignore/add/remove/force"
    },
    "nl_after_square_assign": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_after_square_assign          = ignore   # ignore/add/remove/force"
    },
    "nl_fcall_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_fcall_brace                  = ignore   # ignore/add/remove/force"
    },
    "nl_enum_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_enum_brace                   = ignore   # ignore/add/remove/force"
    },
    "nl_enum_class": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_enum_class                   = ignore   # ignore/add/remove/force"
    },
    "nl_enum_class_identifier": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_enum_class_identifier        = ignore   # ignore/add/remove/force"
    },
    "nl_enum_identifier_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_enum_identifier_colon        = ignore   # ignore/add/remove/force"
    },
    "nl_enum_colon_type": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_enum_colon_type              = ignore   # ignore/add/remove/force"
    },
    "nl_struct_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_struct_brace                 = ignore   # ignore/add/remove/force"
    },
    "nl_union_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_union_brace                  = ignore   # ignore/add/remove/force"
    },
    "nl_if_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_if_brace                     = ignore   # ignore/add/remove/force"
    },
    "nl_brace_else": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_brace_else                   = ignore   # ignore/add/remove/force"
    },
    "nl_elseif_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_elseif_brace                 = ignore   # ignore/add/remove/force"
    },
    "nl_else_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_else_brace                   = ignore   # ignore/add/remove/force"
    },
    "nl_else_if": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_else_if                      = ignore   # ignore/add/remove/force"
    },
    "nl_before_if_closing_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_before_if_closing_paren      = ignore   # ignore/add/remove/force"
    },
    "nl_brace_finally": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_brace_finally                = ignore   # ignore/add/remove/force"
    },
    "nl_finally_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_finally_brace                = ignore   # ignore/add/remove/force"
    },
    "nl_try_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_try_brace                    = ignore   # ignore/add/remove/force"
    },
    "nl_getset_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_getset_brace                 = ignore   # ignore/add/remove/force"
    },
    "nl_for_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_for_brace                    = ignore   # ignore/add/remove/force"
    },
    "nl_catch_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_catch_brace                  = ignore   # ignore/add/remove/force"
    },
    "nl_oc_catch_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_oc_catch_brace               = ignore   # ignore/add/remove/force"
    },
    "nl_brace_catch": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_brace_catch                  = ignore   # ignore/add/remove/force"
    },
    "nl_oc_brace_catch": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_oc_brace_catch               = ignore   # ignore/add/remove/force"
    },
    "nl_brace_square": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_brace_square                 = ignore   # ignore/add/remove/force"
    },
    "nl_brace_fparen": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_brace_fparen                 = ignore   # ignore/add/remove/force"
    },
    "nl_while_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_while_brace                  = ignore   # ignore/add/remove/force"
    },
    "nl_scope_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_scope_brace                  = ignore   # ignore/add/remove/force"
    },
    "nl_unittest_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_unittest_brace               = ignore   # ignore/add/remove/force"
    },
    "nl_version_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_version_brace                = ignore   # ignore/add/remove/force"
    },
    "nl_using_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_using_brace                  = ignore   # ignore/add/remove/force"
    },
    "nl_brace_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_brace_brace                  = ignore   # ignore/add/remove/force"
    },
    "nl_do_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_do_brace                     = ignore   # ignore/add/remove/force"
    },
    "nl_brace_while": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_brace_while                  = ignore   # ignore/add/remove/force"
    },
    "nl_switch_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_switch_brace                 = ignore   # ignore/add/remove/force"
    },
    "nl_synchronized_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_synchronized_brace           = ignore   # ignore/add/remove/force"
    },
    "nl_multi_line_cond": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_multi_line_cond              = false    # true/false"
    },
    "nl_multi_line_define": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_multi_line_define            = false    # true/false"
    },
    "nl_before_case": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_before_case                  = false    # true/false"
    },
    "nl_after_case": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_case                   = false    # true/false"
    },
    "nl_case_colon_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_case_colon_brace             = ignore   # ignore/add/remove/force"
    },
    "nl_before_throw": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_before_throw                 = ignore   # ignore/add/remove/force"
    },
    "nl_namespace_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_namespace_brace              = ignore   # ignore/add/remove/force"
    },
    "nl_template_class": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_template_class               = ignore   # ignore/add/remove/force"
    },
    "nl_class_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_class_brace                  = ignore   # ignore/add/remove/force"
    },
    "nl_class_init_args": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_class_init_args              = ignore   # ignore/add/remove/force"
    },
    "nl_constr_init_args": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_constr_init_args             = ignore   # ignore/add/remove/force"
    },
    "nl_enum_own_lines": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_enum_own_lines               = ignore   # ignore/add/remove/force"
    },
    "nl_func_type_name": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_type_name               = ignore   # ignore/add/remove/force"
    },
    "nl_func_type_name_class": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_type_name_class         = ignore   # ignore/add/remove/force"
    },
    "nl_func_class_scope": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_class_scope             = ignore   # ignore/add/remove/force"
    },
    "nl_func_scope_name": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_scope_name              = ignore   # ignore/add/remove/force"
    },
    "nl_func_proto_type_name": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_proto_type_name         = ignore   # ignore/add/remove/force"
    },
    "nl_func_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_paren                   = ignore   # ignore/add/remove/force"
    },
    "nl_func_paren_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_paren_empty             = ignore   # ignore/add/remove/force"
    },
    "nl_func_def_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_def_paren               = ignore   # ignore/add/remove/force"
    },
    "nl_func_def_paren_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_def_paren_empty         = ignore   # ignore/add/remove/force"
    },
    "nl_func_call_paren": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_call_paren              = ignore   # ignore/add/remove/force"
    },
    "nl_func_call_paren_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_call_paren_empty        = ignore   # ignore/add/remove/force"
    },
    "nl_func_decl_start": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_decl_start              = ignore   # ignore/add/remove/force"
    },
    "nl_func_def_start": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_def_start               = ignore   # ignore/add/remove/force"
    },
    "nl_func_decl_start_single": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_decl_start_single       = ignore   # ignore/add/remove/force"
    },
    "nl_func_def_start_single": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_def_start_single        = ignore   # ignore/add/remove/force"
    },
    "nl_func_decl_start_multi_line": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_decl_start_multi_line   = false    # true/false"
    },
    "nl_func_def_start_multi_line": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_def_start_multi_line    = false    # true/false"
    },
    "nl_func_decl_args": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_decl_args               = ignore   # ignore/add/remove/force"
    },
    "nl_func_def_args": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_def_args                = ignore   # ignore/add/remove/force"
    },
    "nl_func_decl_args_multi_line": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_decl_args_multi_line    = false    # true/false"
    },
    "nl_func_def_args_multi_line": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_def_args_multi_line     = false    # true/false"
    },
    "nl_func_decl_end": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_decl_end                = ignore   # ignore/add/remove/force"
    },
    "nl_func_def_end": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_def_end                 = ignore   # ignore/add/remove/force"
    },
    "nl_func_decl_end_single": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_decl_end_single         = ignore   # ignore/add/remove/force"
    },
    "nl_func_def_end_single": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_def_end_single          = ignore   # ignore/add/remove/force"
    },
    "nl_func_decl_end_multi_line": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_decl_end_multi_line     = false    # true/false"
    },
    "nl_func_def_end_multi_line": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_def_end_multi_line      = false    # true/false"
    },
    "nl_func_decl_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_decl_empty              = ignore   # ignore/add/remove/force"
    },
    "nl_func_def_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_def_empty               = ignore   # ignore/add/remove/force"
    },
    "nl_func_call_empty": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_call_empty              = ignore   # ignore/add/remove/force"
    },
    "nl_func_call_start": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_func_call_start              = ignore   # ignore/add/remove/force"
    },
    "nl_func_call_start_multi_line": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_call_start_multi_line   = false    # true/false"
    },
    "nl_func_call_args_multi_line": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_call_args_multi_line    = false    # true/false"
    },
    "nl_func_call_end_multi_line": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_func_call_end_multi_line     = false    # true/false"
    },
    "nl_oc_msg_args": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_oc_msg_args                  = false    # true/false"
    },
    "nl_fdef_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_fdef_brace                   = ignore   # ignore/add/remove/force"
    },
    "nl_fdef_brace_cond": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_fdef_brace_cond              = ignore   # ignore/add/remove/force"
    },
    "nl_cpp_ldef_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_cpp_ldef_brace               = ignore   # ignore/add/remove/force"
    },
    "nl_return_expr": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_return_expr                  = ignore   # ignore/add/remove/force"
    },
    "nl_after_semicolon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_semicolon              = false    # true/false"
    },
    "nl_paren_dbrace_open": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_paren_dbrace_open            = ignore   # ignore/add/remove/force"
    },
    "nl_type_brace_init_lst": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_type_brace_init_lst          = ignore   # ignore/add/remove/force"
    },
    "nl_type_brace_init_lst_open": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_type_brace_init_lst_open     = ignore   # ignore/add/remove/force"
    },
    "nl_type_brace_init_lst_close": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_type_brace_init_lst_close    = ignore   # ignore/add/remove/force"
    },
    "nl_after_brace_open": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_brace_open             = false    # true/false"
    },
    "nl_after_brace_open_cmt": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_brace_open_cmt         = false    # true/false"
    },
    "nl_after_vbrace_open": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_vbrace_open            = false    # true/false"
    },
    "nl_after_vbrace_open_empty": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_vbrace_open_empty      = false    # true/false"
    },
    "nl_after_brace_close": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_brace_close            = false    # true/false"
    },
    "nl_after_vbrace_close": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_vbrace_close           = false    # true/false"
    },
    "nl_brace_struct_var": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_brace_struct_var             = ignore   # ignore/add/remove/force"
    },
    "nl_define_macro": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_define_macro                 = false    # true/false"
    },
    "nl_squeeze_paren_close": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_squeeze_paren_close          = false    # true/false"
    },
    "nl_squeeze_ifdef": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_squeeze_ifdef                = false    # true/false"
    },
    "nl_squeeze_ifdef_top_level": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_squeeze_ifdef_top_level      = false    # true/false"
    },
    "nl_before_if": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_before_if                    = ignore   # ignore/add/remove/force"
    },
    "nl_after_if": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_after_if                     = ignore   # ignore/add/remove/force"
    },
    "nl_before_for": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_before_for                   = ignore   # ignore/add/remove/force"
    },
    "nl_after_for": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_after_for                    = ignore   # ignore/add/remove/force"
    },
    "nl_before_while": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_before_while                 = ignore   # ignore/add/remove/force"
    },
    "nl_after_while": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_after_while                  = ignore   # ignore/add/remove/force"
    },
    "nl_before_switch": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_before_switch                = ignore   # ignore/add/remove/force"
    },
    "nl_after_switch": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_after_switch                 = ignore   # ignore/add/remove/force"
    },
    "nl_before_synchronized": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_before_synchronized          = ignore   # ignore/add/remove/force"
    },
    "nl_after_synchronized": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_after_synchronized           = ignore   # ignore/add/remove/force"
    },
    "nl_before_do": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_before_do                    = ignore   # ignore/add/remove/force"
    },
    "nl_after_do": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_after_do                     = ignore   # ignore/add/remove/force"
    },
    "nl_before_return": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_before_return                = false    # true/false"
    },
    "nl_after_return": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_return                 = false    # true/false"
    },
    "nl_ds_struct_enum_cmt": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_ds_struct_enum_cmt           = false    # true/false"
    },
    "nl_ds_struct_enum_close_brace": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_ds_struct_enum_close_brace   = false    # true/false"
    },
    "nl_class_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_class_colon                  = ignore   # ignore/add/remove/force"
    },
    "nl_constr_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_constr_colon                 = ignore   # ignore/add/remove/force"
    },
    "nl_namespace_two_to_one_liner": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_namespace_two_to_one_liner   = false    # true/false"
    },
    "nl_create_if_one_liner": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_create_if_one_liner          = false    # true/false"
    },
    "nl_create_for_one_liner": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_create_for_one_liner         = false    # true/false"
    },
    "nl_create_while_one_liner": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_create_while_one_liner       = false    # true/false"
    },
    "nl_create_func_def_one_liner": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_create_func_def_one_liner    = false    # true/false"
    },
    "nl_split_if_one_liner": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_split_if_one_liner           = false    # true/false"
    },
    "nl_split_for_one_liner": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_split_for_one_liner          = false    # true/false"
    },
    "nl_split_while_one_liner": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_split_while_one_liner        = false    # true/false"
    },
    "nl_max": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_max                          = 0        # unsigned number"
    },
    "nl_max_blank_in_func": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_max_blank_in_func            = 0        # unsigned number"
    },
    "nl_before_func_body_proto": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_before_func_body_proto       = 0        # unsigned number"
    },
    "nl_before_func_body_def": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_before_func_body_def         = 0        # unsigned number"
    },
    "nl_before_func_class_proto": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_before_func_class_proto      = 0        # unsigned number"
    },
    "nl_before_func_class_def": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_before_func_class_def        = 0        # unsigned number"
    },
    "nl_after_func_proto": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_func_proto             = 0        # unsigned number"
    },
    "nl_after_func_proto_group": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_func_proto_group       = 0        # unsigned number"
    },
    "nl_after_func_class_proto": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_func_class_proto       = 0        # unsigned number"
    },
    "nl_after_func_class_proto_group": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_func_class_proto_group = 0        # unsigned number"
    },
    "nl_class_leave_one_liner_groups": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_class_leave_one_liner_groups = false    # true/false"
    },
    "nl_after_func_body": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_func_body              = 0        # unsigned number"
    },
    "nl_after_func_body_class": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_func_body_class        = 0        # unsigned number"
    },
    "nl_after_func_body_one_liner": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_func_body_one_liner    = 0        # unsigned number"
    },
    "nl_func_var_def_blk": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_func_var_def_blk             = 0        # unsigned number"
    },
    "nl_typedef_blk_start": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_typedef_blk_start            = 0        # unsigned number"
    },
    "nl_typedef_blk_end": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_typedef_blk_end              = 0        # unsigned number"
    },
    "nl_typedef_blk_in": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_typedef_blk_in               = 0        # unsigned number"
    },
    "nl_var_def_blk_start": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_var_def_blk_start            = 0        # unsigned number"
    },
    "nl_var_def_blk_end": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_var_def_blk_end              = 0        # unsigned number"
    },
    "nl_var_def_blk_in": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_var_def_blk_in               = 0        # unsigned number"
    },
    "nl_before_block_comment": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_before_block_comment         = 0        # unsigned number"
    },
    "nl_before_c_comment": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_before_c_comment             = 0        # unsigned number"
    },
    "nl_before_cpp_comment": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_before_cpp_comment           = 0        # unsigned number"
    },
    "nl_after_multiline_comment": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_multiline_comment      = false    # true/false"
    },
    "nl_after_label_colon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "nl_after_label_colon            = false    # true/false"
    },
    "nl_after_struct": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_struct                 = 0        # unsigned number"
    },
    "nl_before_class": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_before_class                 = 0        # unsigned number"
    },
    "nl_after_class": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_class                  = 0        # unsigned number"
    },
    "nl_before_access_spec": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_before_access_spec           = 0        # unsigned number"
    },
    "nl_after_access_spec": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_access_spec            = 0        # unsigned number"
    },
    "nl_comment_func_def": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_comment_func_def             = 0        # unsigned number"
    },
    "nl_after_try_catch_finally": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_after_try_catch_finally      = 0        # unsigned number"
    },
    "nl_around_cs_property": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_around_cs_property           = 0        # unsigned number"
    },
    "nl_between_get_set": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_between_get_set              = 0        # unsigned number"
    },
    "nl_property_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_property_brace               = ignore   # ignore/add/remove/force"
    },
    "nl_inside_namespace": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_inside_namespace             = 0        # unsigned number"
    },
    "eat_blanks_after_open_brace": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "eat_blanks_after_open_brace     = false    # true/false"
    },
    "eat_blanks_before_close_brace": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "eat_blanks_before_close_brace   = false    # true/false"
    },
    "nl_remove_extra_newlines": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "nl_remove_extra_newlines        = 0        # unsigned number"
    },
    "nl_after_annotation": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_after_annotation             = ignore   # ignore/add/remove/force"
    },
    "nl_between_annotation": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "nl_between_annotation           = ignore   # ignore/add/remove/force"
    },
    "pos_arith": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_arith                       = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_assign": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_assign                      = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_bool": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_bool                        = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_compare": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_compare                     = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_conditional": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_conditional                 = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_comma": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_comma                       = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_enum_comma": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_enum_comma                  = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_class_comma": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_class_comma                 = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_constr_comma": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_constr_comma                = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_class_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_class_colon                 = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "pos_constr_colon": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "break",
            "force",
            "lead",
            "trail",
            "join",
            "lead_break",
            "lead_force",
            "trail_break",
            "trail_force"
        ],
        "line": "pos_constr_colon                = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force"
    },
    "code_width": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "code_width                      = 0        # unsigned number"
    },
    "ls_for_split_full": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "ls_for_split_full               = false    # true/false"
    },
    "ls_func_split_full": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "ls_func_split_full              = false    # true/false"
    },
    "ls_code_width": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "ls_code_width                   = false    # true/false"
    },
    "align_keep_tabs": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_keep_tabs                 = false    # true/false"
    },
    "align_with_tabs": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_with_tabs                 = false    # true/false"
    },
    "align_on_tabstop": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_on_tabstop                = false    # true/false"
    },
    "align_number_right": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_number_right              = false    # true/false"
    },
    "align_keep_extra_space": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_keep_extra_space          = false    # true/false"
    },
    "align_func_params": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_func_params               = false    # true/false"
    },
    "align_func_params_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_func_params_span          = 0        # unsigned number"
    },
    "align_func_params_thresh": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "align_func_params_thresh        = 0        # number"
    },
    "align_func_params_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_func_params_gap           = 0        # unsigned number"
    },
    "align_constr_value_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_constr_value_span         = 0        # unsigned number"
    },
    "align_constr_value_thresh": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "align_constr_value_thresh       = 0        # number"
    },
    "align_constr_value_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_constr_value_gap          = 0        # unsigned number"
    },
    "align_same_func_call_params": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_same_func_call_params     = false    # true/false"
    },
    "align_same_func_call_params_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_same_func_call_params_span = 0        # unsigned number"
    },
    "align_same_func_call_params_thresh": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "align_same_func_call_params_thresh = 0        # number"
    },
    "align_var_def_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_var_def_span              = 0        # unsigned number"
    },
    "align_var_def_star_style": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_var_def_star_style        = 0        # unsigned number"
    },
    "align_var_def_amp_style": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_var_def_amp_style         = 0        # unsigned number"
    },
    "align_var_def_thresh": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "align_var_def_thresh            = 0        # number"
    },
    "align_var_def_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_var_def_gap               = 0        # unsigned number"
    },
    "align_var_def_colon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_var_def_colon             = false    # true/false"
    },
    "align_var_def_colon_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_var_def_colon_gap         = 0        # unsigned number"
    },
    "align_var_def_attribute": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_var_def_attribute         = false    # true/false"
    },
    "align_var_def_inline": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_var_def_inline            = false    # true/false"
    },
    "align_assign_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_assign_span               = 0        # unsigned number"
    },
    "align_assign_func_proto_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_assign_func_proto_span    = 0        # unsigned number"
    },
    "align_assign_thresh": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "align_assign_thresh             = 0        # number"
    },
    "align_assign_decl_func": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_assign_decl_func          = 0        # unsigned number"
    },
    "align_enum_equ_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_enum_equ_span             = 0        # unsigned number"
    },
    "align_enum_equ_thresh": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "align_enum_equ_thresh           = 0        # number"
    },
    "align_var_class_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_var_class_span            = 0        # unsigned number"
    },
    "align_var_class_thresh": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "align_var_class_thresh          = 0        # number"
    },
    "align_var_class_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_var_class_gap             = 0        # unsigned number"
    },
    "align_var_struct_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_var_struct_span           = 0        # unsigned number"
    },
    "align_var_struct_thresh": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "align_var_struct_thresh         = 0        # number"
    },
    "align_var_struct_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_var_struct_gap            = 0        # unsigned number"
    },
    "align_struct_init_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_struct_init_span          = 0        # unsigned number"
    },
    "align_typedef_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_typedef_span              = 0        # unsigned number"
    },
    "align_typedef_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_typedef_gap               = 0        # unsigned number"
    },
    "align_typedef_func": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_typedef_func              = 0        # unsigned number"
    },
    "align_typedef_star_style": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_typedef_star_style        = 0        # unsigned number"
    },
    "align_typedef_amp_style": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_typedef_amp_style         = 0        # unsigned number"
    },
    "align_right_cmt_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_right_cmt_span            = 0        # unsigned number"
    },
    "align_right_cmt_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_right_cmt_gap             = 0        # unsigned number"
    },
    "align_right_cmt_mix": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_right_cmt_mix             = false    # true/false"
    },
    "align_right_cmt_same_level": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_right_cmt_same_level      = false    # true/false"
    },
    "align_right_cmt_at_col": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_right_cmt_at_col          = 0        # unsigned number"
    },
    "align_func_proto_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_func_proto_span           = 0        # unsigned number"
    },
    "align_func_proto_thresh": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "align_func_proto_thresh         = 0        # number"
    },
    "align_func_proto_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_func_proto_gap            = 0        # unsigned number"
    },
    "align_on_operator": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_on_operator               = false    # true/false"
    },
    "align_mix_var_proto": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_mix_var_proto             = false    # true/false"
    },
    "align_single_line_func": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_single_line_func          = false    # true/false"
    },
    "align_single_line_brace": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_single_line_brace         = false    # true/false"
    },
    "align_single_line_brace_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_single_line_brace_gap     = 0        # unsigned number"
    },
    "align_oc_msg_spec_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_oc_msg_spec_span          = 0        # unsigned number"
    },
    "align_nl_cont": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_nl_cont                   = false    # true/false"
    },
    "align_pp_define_together": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_pp_define_together        = false    # true/false"
    },
    "align_pp_define_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_pp_define_span            = 0        # unsigned number"
    },
    "align_pp_define_gap": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_pp_define_gap             = 0        # unsigned number"
    },
    "align_left_shift": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_left_shift                = true     # true/false"
    },
    "align_asm_colon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_asm_colon                 = false    # true/false"
    },
    "align_oc_msg_colon_span": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "align_oc_msg_colon_span         = 0        # unsigned number"
    },
    "align_oc_msg_colon_first": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_oc_msg_colon_first        = false    # true/false"
    },
    "align_oc_decl_colon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "align_oc_decl_colon             = false    # true/false"
    },
    "cmt_width": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "cmt_width                       = 0        # unsigned number"
    },
    "cmt_reflow_mode": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "cmt_reflow_mode                 = 0        # unsigned number"
    },
    "cmt_convert_tab_to_spaces": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_convert_tab_to_spaces       = false    # true/false"
    },
    "cmt_indent_multi": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_indent_multi                = true     # true/false"
    },
    "cmt_c_group": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_c_group                     = false    # true/false"
    },
    "cmt_c_nl_start": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_c_nl_start                  = false    # true/false"
    },
    "cmt_c_nl_end": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_c_nl_end                    = false    # true/false"
    },
    "cmt_cpp_to_c": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_cpp_to_c                    = false    # true/false"
    },
    "cmt_cpp_group": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_cpp_group                   = false    # true/false"
    },
    "cmt_cpp_nl_start": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_cpp_nl_start                = false    # true/false"
    },
    "cmt_cpp_nl_end": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_cpp_nl_end                  = false    # true/false"
    },
    "cmt_star_cont": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_star_cont                   = false    # true/false"
    },
    "cmt_sp_before_star_cont": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "cmt_sp_before_star_cont         = 0        # unsigned number"
    },
    "cmt_sp_after_star_cont": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "cmt_sp_after_star_cont          = 0        # unsigned number"
    },
    "cmt_multi_check_last": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_multi_check_last            = true     # true/false"
    },
    "cmt_multi_first_len_minimum": {
        "value": "4",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "cmt_multi_first_len_minimum     = 4        # unsigned number"
    },
    "cmt_insert_file_header": {
        "value": "\"\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "cmt_insert_file_header          = \"\"         # string"
    },
    "cmt_insert_file_footer": {
        "value": "\"\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "cmt_insert_file_footer          = \"\"         # string"
    },
    "cmt_insert_func_header": {
        "value": "\"\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "cmt_insert_func_header          = \"\"         # string"
    },
    "cmt_insert_class_header": {
        "value": "\"\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "cmt_insert_class_header         = \"\"         # string"
    },
    "cmt_insert_oc_msg_header": {
        "value": "\"\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "cmt_insert_oc_msg_header        = \"\"         # string"
    },
    "cmt_insert_before_preproc": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_insert_before_preproc       = false    # true/false"
    },
    "cmt_insert_before_inlines": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_insert_before_inlines       = true     # true/false"
    },
    "cmt_insert_before_ctor_dtor": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "cmt_insert_before_ctor_dtor     = false    # true/false"
    },
    "mod_full_brace_do": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "mod_full_brace_do               = ignore   # ignore/add/remove/force"
    },
    "mod_full_brace_for": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "mod_full_brace_for              = ignore   # ignore/add/remove/force"
    },
    "mod_full_brace_function": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "mod_full_brace_function         = ignore   # ignore/add/remove/force"
    },
    "mod_full_brace_if": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "mod_full_brace_if               = ignore   # ignore/add/remove/force"
    },
    "mod_full_brace_if_chain": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_full_brace_if_chain         = false    # true/false"
    },
    "mod_full_brace_if_chain_only": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_full_brace_if_chain_only    = false    # true/false"
    },
    "mod_full_brace_while": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "mod_full_brace_while            = ignore   # ignore/add/remove/force"
    },
    "mod_full_brace_using": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "mod_full_brace_using            = ignore   # ignore/add/remove/force"
    },
    "mod_full_brace_nl": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "mod_full_brace_nl               = 0        # unsigned number"
    },
    "mod_full_brace_nl_block_rem_mlcond": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_full_brace_nl_block_rem_mlcond = false    # true/false"
    },
    "mod_paren_on_return": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "mod_paren_on_return             = ignore   # ignore/add/remove/force"
    },
    "mod_pawn_semicolon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_pawn_semicolon              = false    # true/false"
    },
    "mod_full_paren_if_bool": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_full_paren_if_bool          = false    # true/false"
    },
    "mod_remove_extra_semicolon": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_remove_extra_semicolon      = false    # true/false"
    },
    "mod_add_long_function_closebrace_comment": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "mod_add_long_function_closebrace_comment = 0        # unsigned number"
    },
    "mod_add_long_namespace_closebrace_comment": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "mod_add_long_namespace_closebrace_comment = 0        # unsigned number"
    },
    "mod_add_long_class_closebrace_comment": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "mod_add_long_class_closebrace_comment = 0        # unsigned number"
    },
    "mod_add_long_switch_closebrace_comment": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "mod_add_long_switch_closebrace_comment = 0        # unsigned number"
    },
    "mod_add_long_ifdef_endif_comment": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "mod_add_long_ifdef_endif_comment = 0        # unsigned number"
    },
    "mod_add_long_ifdef_else_comment": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "mod_add_long_ifdef_else_comment = 0        # unsigned number"
    },
    "mod_sort_import": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_sort_import                 = false    # true/false"
    },
    "mod_sort_using": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_sort_using                  = false    # true/false"
    },
    "mod_sort_include": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_sort_include                = false    # true/false"
    },
    "mod_move_case_break": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_move_case_break             = false    # true/false"
    },
    "mod_case_brace": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "mod_case_brace                  = ignore   # ignore/add/remove/force"
    },
    "mod_remove_empty_return": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_remove_empty_return         = false    # true/false"
    },
    "mod_enum_last_comma": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "mod_enum_last_comma             = ignore   # ignore/add/remove/force"
    },
    "mod_sort_oc_properties": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "mod_sort_oc_properties          = false    # true/false"
    },
    "mod_sort_oc_property_class_weight": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "mod_sort_oc_property_class_weight = 0        # number"
    },
    "mod_sort_oc_property_thread_safe_weight": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "mod_sort_oc_property_thread_safe_weight = 0        # number"
    },
    "mod_sort_oc_property_readwrite_weight": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "mod_sort_oc_property_readwrite_weight = 0        # number"
    },
    "mod_sort_oc_property_reference_weight": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "mod_sort_oc_property_reference_weight = 0        # number"
    },
    "mod_sort_oc_property_getter_weight": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "mod_sort_oc_property_getter_weight = 0        # number"
    },
    "mod_sort_oc_property_setter_weight": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "mod_sort_oc_property_setter_weight = 0        # number"
    },
    "mod_sort_oc_property_nullability_weight": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "mod_sort_oc_property_nullability_weight = 0        # number"
    },
    "pp_indent": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "pp_indent                       = ignore   # ignore/add/remove/force"
    },
    "pp_indent_at_level": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "pp_indent_at_level              = false    # true/false"
    },
    "pp_indent_count": {
        "value": "1",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "pp_indent_count                 = 1        # unsigned number"
    },
    "pp_space": {
        "value": "ignore",
        "type": "ParamType.SET",
        "allowed": [
            "ignore",
            "add",
            "remove",
            "force"
        ],
        "line": "pp_space                        = ignore   # ignore/add/remove/force"
    },
    "pp_space_count": {
        "value": "0",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "pp_space_count                  = 0        # unsigned number"
    },
    "pp_indent_region": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "pp_indent_region                = 0        # number"
    },
    "pp_region_indent_code": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "pp_region_indent_code           = false    # true/false"
    },
    "pp_indent_if": {
        "value": "0",
        "type": "ParamType.INTEGER",
        "allowed": null,
        "line": "pp_indent_if                    = 0        # number"
    },
    "pp_if_indent_code": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "pp_if_indent_code               = false    # true/false"
    },
    "pp_define_at_level": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "pp_define_at_level              = false    # true/false"
    },
    "pp_ignore_define_body": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "pp_ignore_define_body           = false    # true/false"
    },
    "pp_indent_case": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "pp_indent_case                  = true     # true/false"
    },
    "pp_indent_func_def": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "pp_indent_func_def              = true     # true/false"
    },
    "pp_indent_extern": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "pp_indent_extern                = true     # true/false"
    },
    "pp_indent_brace": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "pp_indent_brace                 = true     # true/false"
    },
    "include_category_0": {
        "value": "\"\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "include_category_0              = \"\"         # string"
    },
    "include_category_1": {
        "value": "\"\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "include_category_1              = \"\"         # string"
    },
    "include_category_2": {
        "value": "\"\"",
        "type": "ParamType.STRING",
        "allowed": null,
        "line": "include_category_2              = \"\"         # string"
    },
    "use_indent_func_call_param": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "use_indent_func_call_param      = true     # true/false"
    },
    "use_indent_continue_only_once": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "use_indent_continue_only_once   = false    # true/false"
    },
    "indent_cpp_lambda_only_once": {
        "value": "false",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "indent_cpp_lambda_only_once     = false    # true/false"
    },
    "use_options_overriding_for_qt_macros": {
        "value": "true",
        "type": "ParamType.SET",
        "allowed": [
            "true",
            "false"
        ],
        "line": "use_options_overriding_for_qt_macros = true     # true/false"
    },
    "warn_level_tabs_found_in_verbatim_string_literals": {
        "value": "2",
        "type": "ParamType.UNSIGNED",
        "allowed": null,
        "line": "warn_level_tabs_found_in_verbatim_string_literals = 2        # unsigned number"
    }
}